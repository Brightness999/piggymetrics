dist: trusty
sudo: required

services:
  - docker

language: java
jdk: oraclejdk8

env:
  global:
    - secure: "GeONVsTD48Y88CKoqupo/FC1Gy0eCrT1UNylvMzz5VYcLhWcUcu/d4870ZJznBqslGHbFaRc6VCXFLnbKNyR5Chgg127ouWOv/NFubJ5cO0UjHlBwoAxQ/SIrxG9W4B6Y2VeWRO0SIPHF6wUVeELiaPmIIe/jF15/SWJA926G2dF0+zTbn1KNWoVRi9pxZ0bIbEvVcVfHjWHsPtho916KRZ7ToV27f5E9DPLVMraK2HROOplJlXKNLuUor9xSmtOB/787yNrZmdsUaQDMHVfru9yEubfg4tF5ydoluB+JPzeUqIK2PrDgAiwmkEdoJFfbAOqwdy8vZkgpYd/t5vkhbOn3yA0QO1pnyhidx1YgyoJN3HwfMeVNQwUVg8jw7bltVe/DxsNo/AW11Tu7jKteuxewRHCxORzaUSmy5rnLq3AKIXT6h8Kq5VxP5tGbQypa7/z+Zu4vfOBdKGMiLllQ0vhhU0osgYzk/jT4KknuWQtOkX+QTS9iViIUwQgcn3kIMlz4eO83Mbt+IkNvgjF0DyE64mfV2ThTjXDV6959g3Nl/Fl95VMSTg95xtl0tbf733Lj+9HCIfLetlBz4ZzOqaDgD5fRL5HA8jR3FFHVdMd+dx/JELjSRHxO6ZFrCVG/2hBldIakO31/FbpODnDIkKO+86Oqz9DPKVnLJlmZp4=" # DOCKER_EMAIL
    - secure: "Gl6a03cI88dKHV4rjP1IkYqCdVe7IM0XNcEzFDCxmvXHWSpqlotntOYtgvtRKsYOzb0cfdQwgFuwj80glUbFX5vbX1y5r+qR5sQSrJVi61e8Pijn0MT7rE/d2gCJwaRTkR2lvtRRTIX41LA+aZ6F7+xFSd+ni82IlaXtDywQJWpCEmxcSqSUd5nVhHzH5JZmkYQmQ8fjxzGUhpeePfapYThPxXsHGxmJeoIlEDM1TEFtxVf3Zo9D10812uesa7EwNSKL6MOBU/Me7+liIHdRRpRwVmOjaFAZLeHsUfZQWcLWer0ODULov1U/YMdF860gV1X8PPYxAYNnWqevOGZIsYTX60yem/dCq90Lx7cIiK/TBZIS7x9k65QwP/shnO/RK8PPANBt8bJ4FBxmDPRMPRvgCPp4wQIYTyaiXd0M6BmK+LysS5cRgOOg7YF+ZRqKjNGY9rkNeGs0x8LIaE4Vz138tJCVJ0U+r2OOZFLCIu4dmvuOo1rWf4Hzh+Xt/nx8RrAwwqHKWRyayHkZEbQv2dNGcJsZyAzXsxA6NTDGQfKYloX5oY4qq3BMCkRoid9sLHoJvZrfkN6mjbZkEd2Ed3RzyTIxasmRUeD45vfr7go9ts1a6ppDrRYJWLi26pqyPhimTI0ljEYXp4QnK5JMya2y6H0wo/hJmzrqfXj4+C0=" # DOCKER_USER
    - secure: "VRlJyPOz7fUmtFdpTdO51BVcjKUGP5t7KF5bG7TSJPXsal7SSxjt6desLQ6zv31tKBp/SrgbnH4hloeAe38hL1I5gQKLPuNjOYhtolgLHlCO3aJiJ0vn0o6mgxOok4S/ul6EMy8VLbKzwt7GrruoaDNVadwc98NY+Grr1eLUzD5CVxa4luSahtKASheCtM29OQOj42Ivnc/MUUMYMymYa/zgIkROqI1ZbQK12NGwx13FzjjF2C9WyTR8IMFOeiuL/Ha8wxT2VeYExWkNw8TQKg35WT26axSoI92BBjPHY+l4IDQ0g8N176sAG52gbz4WXx60kRgqHrn+b5cjO/v1PknqXCqwWVrskm/mgGxJ4IVmpqa7ItDYtoVPzW4hyPsEHWyPMjii5280VdqVRueHyxSBH/uF3iQCDwR0hRdVnPPvgrt40/jbiD3pBhnDQErHCu54FA7uzfFT8LUvj3PgHn19KWAb4gKMpP0AZA3aDOD/3+db1x25ozhDXoCLPFk+kK0lp5mwTKka910lX4L25wp2P3RDdbGQTeVjBBp5+IxzfBuF7m2aEww7HgpB/TmHGaxo61cZfLFwcU2tfIQnPVRiomMqh85xFHIkDETNJJMdV1o+Im5maOzg3u5iy7E6dJec6jTYSCIzh6BemM+scYVZzLkYZVRyrUQkUj7ldoI=" # DOCKER_PASS
    - COMMIT=${TRAVIS_COMMIT::7}

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - docker login -u $DOCKER_USER -p $DOCKER_PASS

  #TAG
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`

  # CONFIG SERVICE
  - export CONFIG=sqshq/piggymetrics-config
  - docker build -t $CONFIG:$COMMIT ./config
  - docker tag $CONFIG:$COMMIT $CONFIG:$TAG
  - docker push $CONFIG

  # REGISTRY
  - export REGISTRY=sqshq/piggymetrics-registry
  - docker build -t $REGISTRY:$COMMIT ./registry
  - docker tag $REGISTRY:$COMMIT $REGISTRY:$TAG
  - docker push $REGISTRY

  # GATEWAY
  - export GATEWAY=sqshq/piggymetrics-gateway
  - docker build -t $GATEWAY:$COMMIT ./gateway
  - docker tag $GATEWAY:$COMMIT $GATEWAY:$TAG
  - docker push $GATEWAY

  # AUTH SERVICE
  - export AUTH_SERVICE=sqshq/piggymetrics-auth-service
  - docker build -t $AUTH_SERVICE:$COMMIT ./auth-service
  - docker tag $AUTH_SERVICE:$COMMIT $AUTH_SERVICE:$TAG
  - docker push $AUTH_SERVICE

  # ACCOUNT SERVICE
  - export ACCOUNT_SERVICE=sqshq/piggymetrics-account-service
  - docker build -t $ACCOUNT_SERVICE:$COMMIT ./account-service
  - docker tag $ACCOUNT_SERVICE:$COMMIT $ACCOUNT_SERVICE:$TAG
  - docker push $ACCOUNT_SERVICE

  # STATISTICS SERVICE
  - export STATISTICS_SERVICE=sqshq/piggymetrics-statistics-service
  - docker build -t $STATISTICS_SERVICE:$COMMIT ./statistics-service
  - docker tag $STATISTICS_SERVICE:$COMMIT $STATISTICS_SERVICE:$TAG
  - docker push $STATISTICS_SERVICE

  # NOTIFICATION_SERVICE
  - export NOTIFICATION_SERVICE=sqshq/piggymetrics-notification-service
  - docker build -t $NOTIFICATION_SERVICE:$COMMIT ./notification-service
  - docker tag $NOTIFICATION_SERVICE:$COMMIT $NOTIFICATION_SERVICE:$TAG
  - docker push $NOTIFICATION_SERVICE

  # MONITORING
  - export MONITORING=sqshq/piggymetrics-monitoring
  - docker build -t $MONITORING:$COMMIT ./monitoring
  - docker tag $MONITORING:$COMMIT $MONITORING:$TAG
  - docker push $MONITORING

  # TURBINE STREAM SERVICE
  - export TURBINE=sqshq/piggymetrics-turbine-stream-service
  - docker build -t $TURBINE:$COMMIT ./turbine-stream-service
  - docker tag $TURBINE:$COMMIT $TURBINE:$TAG
  - docker push $TURBINE

  # MONGO DB
  - export MONGO_DB=sqshq/piggymetrics-mongodb
  - docker build -t $MONGO_DB:$COMMIT ./mongodb
  - docker tag $MONGO_DB:$COMMIT $MONGO_DB:$TAG
  - docker push $MONGO_DB
